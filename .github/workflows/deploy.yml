name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'production' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full test suite
        run: |
          npm run type-check
          npm run lint
          npm run test:coverage

      - name: Build for production
        run: npm run build

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp -r dist/ deploy/
          cp package.json deploy/
          cp package-lock.json deploy/
          cp -r node_modules/ deploy/ || echo "Will install dependencies on target"

      - name: Generate deployment info
        run: |
          cat > deploy/DEPLOYMENT_INFO.txt << EOF
          Deployment Information
          =====================
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref_name }}
          Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          Environment: ${{ github.event.inputs.environment || 'production' }}
          Triggered by: ${{ github.event_name }}
          Actor: ${{ github.actor }}
          EOF

      - name: Archive deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package-${{ github.sha }}
          path: deploy/
          retention-days: 30

      - name: Deploy to environment
        run: |
          echo "🚀 Deploying to ${{ github.event.inputs.environment || 'production' }}"
          echo "📦 Package ready for deployment"
          echo "📋 Deployment info:"
          cat deploy/DEPLOYMENT_INFO.txt
          echo ""
          echo "🔗 Download the deployment package from the Actions artifacts"

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Deployment notification
        run: |
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            echo "✅ Deployment to ${{ github.event.inputs.environment || 'production' }} successful!"
            echo "Commit: ${{ github.sha }}"
            echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          else
            echo "❌ Deployment to ${{ github.event.inputs.environment || 'production' }} failed!"
            exit 1
          fi